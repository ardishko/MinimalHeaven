# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, inputs, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # fileSystems."/" =
  #   { /* device = "/dev/disk/by-uuid/93d6988a-cb1d-40ae-b4d3-7deb6a6254a9"; */
  #     device = "tmpfs";
  #     options = [
  #       "relatime"
  #       "mode=755"
  #       "size=6G"
  #     ];
  #     fsType = "tmpfs";
  #     neededForBoot = true;
  #   };
  #
  # fileSystems."/boot" =
  #   { device = "/dev/disk/by-uuid/C0B0-3C8B";
  #     fsType = "vfat";
  #   };
  # fileSystems."/persist".neededForBoot = true;

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
